version: '3'
services:
  remix:
    build:
      context: ./md
      dockerfile: Dockerfile
    volumes:
      - ./md:/app
#      - ./md/app:/app/app
#      - ./md/public:/app/public

  #  for_Macbook Intel
  db:
    image: mysql:5.7
    container_name: pwa-db
    volumes:
      - db_data:/var/lib/mysql
      - ./wp/staging.sql:/docker-entrypoint-initdb.d/staging.sql
    restart: always
    environment:
      MYSQL_DATABASE: pwa
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: example
      MYSQL_ROOT_PASSWORD: example
  # # for_Macbook M1
#  db:
#    image: arm64v8/mysql
#    container_name: pwa-db
#    volumes:
#      - db_data:/var/lib/mysql
#      - ./wp/staging.sql:/docker-entrypoint-initdb.d/staging.sql
#    restart: always
#    environment:
#      MYSQL_DATABASE: pwa
#      MYSQL_USER: wordpress
#      MYSQL_PASSWORD: example
#      MYSQL_ROOT_PASSWORD: example

  wordpress:
    container_name: pwa-wordpress
    build: ./deploy/staging/
    volumes:
      - ./wp:/var/www/html/wp
    hostname: pwa.staging
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: example
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_HOME', 'https://pwa.staging' );
        define( 'WP_SITEURL', 'https://pwa.staging' );
    depends_on:
      - db
      - php-fpm

  nginx:
    image: nginx:1.18
    container_name: pwa-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./wp:/var/www/html/wp
      - ./deploy/staging/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./deploy/staging/certs:/etc/nginx/certs
    depends_on:
      - php-fpm
    command: [ nginx-debug, '-g', 'daemon off;' ]

  php-fpm:
    container_name: pwa-php-fpm
    build: ./deploy/staging/
    volumes:
      - ./wp:/var/www/html/wp

volumes:
  db_data: